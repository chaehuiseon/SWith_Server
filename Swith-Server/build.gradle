buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.2'

    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'swith'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //p6spy~~ insert into hello (id) values(1) binding parameter을 쉽게 보여줌
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'


    //querydsl library 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"



    //테스트에서 lombok 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Lombok
    implementation ('org.projectlombok:lombok:1.18.20')
    compileOnly ('org.projectlombok:lombok:1.18.20')
    annotationProcessor ('org.projectlombok:lombok:1.18.20')

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'mysql:mysql-connector-java'

    runtimeOnly ('mysql:mysql-connector-java') //mysql8
////    //runtimeOnly 'mysql:mysql-connector-java:5.1.47' //mysql5
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //mysql 5버전의 경우 삭제.

    //h2 DB
    runtimeOnly 'com.h2database:h2'

    // 이미지 S3 업로드
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // swagger 문서화
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.apache.commons:commons-exec:1.3'
    //compile group: 'org.apache.commons', name: 'commons-exec', version: '1.1'

    //implementation group : 'org.python', name = 'jython-standalone',version:'2.7.2'
    //swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'


    // Security, Authentication
    // 시큐리티 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation  'io.jsonwebtoken:jjwt:0.9.1'

    implementation group: 'org.json', name: 'json', version: '20090211'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //firebase
    implementation 'com.google.firebase:firebase-admin:6.8.1'

    // okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    //jasypt 설정파일 암호화 라이브러리
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
}

test {
    useJUnitPlatform()
}


//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝